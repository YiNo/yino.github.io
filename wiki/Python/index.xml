<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on sun17 wiki</title><link>https://kangkang17.cn/wiki/Python/</link><description>Recent content in Python on sun17 wiki</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://kangkang17.cn/wiki/Python/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://kangkang17.cn/wiki/Python/common-function/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kangkang17.cn/wiki/Python/common-function/</guid><description>常用函数 # 判断类型 def typeof(variate): type=None if isinstance(variate,int): type = &amp;#34;int&amp;#34; elif isinstance(variate,str): type = &amp;#34;str&amp;#34; elif isinstance(variate,float): type = &amp;#34;float&amp;#34; elif isinstance(variate,list): type = &amp;#34;list&amp;#34; elif isinstance(variate,tuple): type = &amp;#34;tuple&amp;#34; elif isinstance(variate,dict): type = &amp;#34;dict&amp;#34; elif isinstance(variate,set): type = &amp;#34;set&amp;#34; return type</description></item><item><title/><link>https://kangkang17.cn/wiki/Python/queue/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kangkang17.cn/wiki/Python/queue/</guid><description>Queue from queue import Queue
#maxsize默认为0 ，不受限
# 一旦&amp;gt;0,消息数又达到限制 q.put()也将阻塞
q = Queue(maxsize=0)
#阻塞程序，等待队列消息
q.get()
#获取消息，设置超时时间
q.get(timeout=5.0)
#发送消息
q.put()
#等待所有的消息都被消费完
q.join()
#查询当前队列的消息个数
q.size()
#队列消息是否被消费完 True/False
q.empty()
#检测队列里消息是否已满
q.full()</description></item><item><title/><link>https://kangkang17.cn/wiki/Python/selenium/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kangkang17.cn/wiki/Python/selenium/</guid><description>历史火狐浏览器版本下载 http://ftp.mozilla.org/pub/firefox/releases/
geckodriver下载地址 https://github.com/mozilla/geckodriver/releases</description></item><item><title/><link>https://kangkang17.cn/wiki/Python/tf-idf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kangkang17.cn/wiki/Python/tf-idf/</guid><description>nlp-qa-tfidf 项目地址
介绍 tfidf 余弦短文本求相似度
用于 可用于QA问答式系统
package gensim jieba pandas
软件架构 软件架构说明
安装教程 可以直接通过 pip instsall nlp_tfidf 安装
使用说明 运行qa文件 questionList 可替换文本集</description></item><item><title/><link>https://kangkang17.cn/wiki/Python/threading/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kangkang17.cn/wiki/Python/threading/</guid><description>threading 关于线程方面
常用函数（t= threading.Thread(target=func)）： t.start() #启动线程 t.join()#阻塞子线程 待 子线程结束后再往下进行 t.is_alive() &amp;amp; t.isAlive() #判断线程是否在执行状态，在执行状态返回 true 否则返回false t.daemon = true|false #设置线程是否随主线程退出而退出，默认为False t.name=“name”# 设置线程的名字 锁 #生成全局唯一锁 lock = threading.Lock() #获取锁,未获取到会阻塞程序 直到获取到锁 才会往下执行 lock.acquire() #释放锁， lock.release() 例：
lock = threading.Lock() with lock : #业务 pass with 语句会在这个代码块执行前自动获取锁，在执行结束后自动释放锁 Event事件#通信机制 event = threading.Event() #重置event 使得所有该event事件都处于待命状态 event.clear() #等待接收event的指令 决定是否阻塞程序执行 event.wait() #发送event指令，使所有设置该event事件的线程执行 event.set() http://python.jobbole.com/81546/</description></item><item><title/><link>https://kangkang17.cn/wiki/Python/uswgi%E4%B8%8Enginx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kangkang17.cn/wiki/Python/uswgi%E4%B8%8Enginx/</guid><description>python uwsgi 与nginx配置 nginx config server{ listen ***; server_name domain; charset utf-8; location / { include uwsgi_params; uwsgi_pass 127.0.0.1:PORT; uwsgi_param UWSGI_PYTHON /usr/bin/python3; // python 解释器 路径 uwsgi_param UWSGI_CHDIR /opt/dataV; // 项目目录 uwsgi_param UWSGI_SCRIPT run:app; // 项目的主程序 } } uwsgi config [uwsgi] # 监听端口 socket = 127.0.0.1:PORT # 项目根目录 chdir = /opt/dataV # python 启动文件 wsgi-file = run.py # 程序内启用的application变量名 callable = app # 进程数量 process = 4 vacuum = true master = true</description></item><item><title/><link>https://kangkang17.cn/wiki/Python/%E6%95%B0%E6%8D%AE%E9%9B%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kangkang17.cn/wiki/Python/%E6%95%B0%E6%8D%AE%E9%9B%86/</guid><description>数据集 一些训练任务的数据集
数据堂 数据堂 是国内比较大的大数据交易平台，上面有许多数据覆盖面很广，但是要收费，推荐有财力的实验室采购。网址： http://www.datatang.com/
搜狗实验室 搜狗实验室是比较权威的数据提供方提供的数据质量很高而且数据是免费的。网址： http://www.sogou.com/labs/
自然语言处理与信息检索共享平台 是中科大的信息平台，上面有一些自然语言相关的数据集。网址： http://www.nlpir.org/?action-category-catid-28
聚数力 http://dataju.cn/Dataju/web/home</description></item></channel></rss>