<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on sun17 wiki</title><link>https://kangkang17.cn/wiki/Linux/</link><description>Recent content in Linux on sun17 wiki</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://kangkang17.cn/wiki/Linux/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://kangkang17.cn/wiki/Linux/CentOS%E6%90%AD%E5%BB%BAShadowsocks%E6%9C%8D%E5%8A%A1%E7%AB%AF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kangkang17.cn/wiki/Linux/CentOS%E6%90%AD%E5%BB%BAShadowsocks%E6%9C%8D%E5%8A%A1%E7%AB%AF/</guid><description>CentOS搭建Shadowsocks服务端 最新方法： 1.安装 直接依次执行下列命令：
yum install python-setuptools easy_install pip pip install shadowsocks 即可完成Shadowsocks服务端安装。 2、配置 新建/etc/shadowsocks.json文件，内容如下
{ &amp;#34;server&amp;#34;:&amp;#34;服务器IP&amp;#34;, &amp;#34;server_port&amp;#34;:8388, &amp;#34;local_address&amp;#34;: &amp;#34;127.0.0.1&amp;#34;, &amp;#34;local_port&amp;#34;:1080, &amp;#34;password&amp;#34;:&amp;#34;密码&amp;#34;, &amp;#34;timeout&amp;#34;:300, &amp;#34;method&amp;#34;:&amp;#34;aes-256-cfb&amp;#34;, &amp;#34;fast_open&amp;#34;: false } 3、运行 前台运行(Ctrl+C或者关闭终端服务会自动停止)：
ssserver -c /etc/shadowsocks.json 后台运行(推荐，关闭终端后服务会继续运行)： ssserver -c /etc/shadowsocks.json -d start ssserver -c /etc/shadowsocks.json -d stop</description></item><item><title/><link>https://kangkang17.cn/wiki/Linux/Prometheus/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kangkang17.cn/wiki/Linux/Prometheus/</guid><description>Prometheus # 简介 # Prometheus受启发于Google的Brogmon监控系统（相似的Kubernetes是从Google的Brog系统演变而来），从2012年开始由前Google工程师在Soundcloud以开源软件的形式进行研发，并且于2015年早期对外发布早期版本。2016年5月继Kubernetes之后成为第二个正式加入CNCF基金会的项目，同年6月正式发布1.0版本。2017年底发布了基于全新存储层的2.0版本，能更好地与容器平台、云平台配合。
监控的目的/重要性 # 在《SRE: Google运维解密》一书中指出，监控系统需要能够有效的支持白盒监控和黑盒监控。通过白盒能够了解其内部的实际运行状态，通过对监控指标的观察能够预判可能出现的问题，从而对潜在的不确定因素进行优化。而黑盒监控，常见的如HTTP探针，TCP探针等，可以在系统或者服务在发生故障时能够快速通知相关的人员进行处理。通过建立完善的监控体系，从而达到以下目的：
长期趋势分析：通过对监控样本数据的持续收集和统计，对监控指标进行长期趋势分析。例如，通过对磁盘空间增长率的判断，我们可以提前预测在未来什么时间节点上需要对资源进行扩容。 对照分析：两个版本的系统运行资源使用情况的差异如何？在不同容量情况下系统的并发和负载变化如何？通过监控能够方便的对系统进行跟踪和比较。 告警：当系统出现或者即将出现故障时，监控系统需要迅速反应并通知管理员，从而能够对问题进行快速的处理或者提前预防问题的发生，避免出现对业务的影响。 故障分析与定位：当问题发生后，需要对问题进行调查和处理。通过对不同监控监控以及历史数据的分析，能够找到并解决根源问题。 数据可视化：通过可视化仪表盘能够直接获取系统的运行状态、资源使用情况、以及服务运行状态等直观的信息。 Prometheus的优势 # Prometheus是一个开源的完整监控解决方案，其对传统监控系统的测试和告警模型进行了彻底的颠覆，形成了基于中央化的规则计算、统一分析和告警的新模型。 相比于传统监控系统Prometheus具有以下优点： 易于管理 # Prometheus核心部分只有一个单独的二进制文件，不存在任何的第三方依赖(数据库，缓存等等)。唯一需要的就是本地磁盘，因此不会有潜在级联故障的风险。 Prometheus基于Pull模型的架构方式，可以在任何地方（本地电脑，开发环境，测试环境）搭建我们的监控系统。对于一些复杂的情况，还可以使用Prometheus服务发现(Service Discovery)的能力动态管理监控目标。 监控服务的内部运行状态 # Pometheus鼓励用户监控服务的内部状态，基于Prometheus丰富的Client库，用户可以轻松的在应用程序中添加对Prometheus的支持，从而让用户可以获取服务和应用内部真正的运行状态。 强大的数据类型 # 强大的查询语言PromQL # 可扩展 # 易于集成 # 可视化 # 社区完善 # 社区中有很多现有开源方案 高效配合grafana 结构 # Prometheus Server (服务端 用于存储信息等) Prometheus client (客户端 用于收集信息，等待服务端采集) Prometheus Server # 从 https://prometheus.io/download/ 找到最新版的 Server软件包 Linux
export VERSION=2.4.3 curl -LO https://github.com/prometheus/prometheus/releases/download/v$VERSION/prometheus-$VERSION.darwin-amd64.tar. tar -xzf prometheus-${VERSION}.darwin-amd64.tar.gz cd prometheus-${VERSION}.darwin-amd64 解压后Prometheus配置文件orimethes.yml</description></item><item><title/><link>https://kangkang17.cn/wiki/Linux/%E5%88%86%E7%BB%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kangkang17.cn/wiki/Linux/%E5%88%86%E7%BB%84/</guid><description> 用户分组 # 场景， # 比如刚下载docker、nginx等一些应用时，使用 sudo下载，则当前用户没有权限去操作此应用
# 查看分组 cat /etc/group # 查看当前用户 $USER #将当前用户添加到 分组中 xxx代表分组 sudo gpasswd -a $USER xxx # 切换到xxx分组 xxx 代表分组 newgrp xxx</description></item><item><title/><link>https://kangkang17.cn/wiki/Linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kangkang17.cn/wiki/Linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid><description>防火墙
# 模拟socketserver端 nc -l 127.0.0.1 8800 #共享linux命令行 tmux #开启防火墙 ufw enable # 置顶ip访问置顶端口 ufw allow from xx.xx.xx.xx to any port 22 #查看所有磁盘是用百分比 df -h #查看具体文件大小 du -sh /* --exclude proc #后台挂载 nohup php7.0 run.php &amp;gt;&amp;gt; run.log 2&amp;gt;&amp;amp;1 &amp;amp; #修改默认编辑器 select-editor #抓包 tcpdump -i eth0 udp tcpdump -i eth0 udp port 12345 # sftp useradd -d /var/www/html/www.xxx.com -m xxx passwd xxx chown -R xxx:xxx /var/www/html/www.xxx.com chmod -R 744 /var/www/html/www.xxx.com</description></item></channel></rss>